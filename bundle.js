var Graph=function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e),i.d(e,"Graph",(function(){return h}));var n,s=function(){function t(t,e){this.radius=30,this.selected=!1,this.notifier=t,this.position=e}return t.prototype.draw=function(t){t.beginPath(),t.arc(this.position.x,this.position.y,this.radius,0,2*Math.PI,!1),t.fillStyle=this.selected?"#D4FFDA":"#fff",t.fill(),t.lineWidth=5,t.strokeStyle="#000",t.stroke()},t.prototype.isWithin=function(t){return Math.pow(t.x-this.position.x,2)+Math.pow(t.y-this.position.y,2)<Math.pow(this.radius,2)},t}(),o=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.compare=function(t){return this.x==t.x&&this.y==t.y},t.prototype.offset=function(e,i){return new t(this.x+Math.cos(i)*e,this.y+Math.sin(i)*e)},t.prototype.angle=function(t,e){return Math.atan2(e-this.y,t-this.x)},t}(),r=function(){function t(t,e){void 0===e&&(e=!1),this.directed=!0,this.vertexSize=30,this._end=null,this.start=t,this.directed=e}return t.prototype.draw=function(t){if(null!==this.endPosition()){var e=this.endPosition();if(null!=e){var i=Math.atan2(e.y-this.start.position.y,e.x-this.start.position.x);t.beginPath(),t.strokeStyle=this._end instanceof s?"#000":"#F56E6E";var n=this.start.position.offset(this.vertexSize,i);t.moveTo(n.x,n.y),t.lineTo(e.x,e.y),t.stroke(),this.directed&&this.drawArrow(t,.5,20)}}},t.prototype.drawArrow=function(t,e,i){var n=this.endPosition();if(null!=n){var s=Math.atan2(n.y-this.start.position.y,n.x-this.start.position.x),o=(n=n.offset(this.vertexSize,s)).x-Math.cos(s)*this.vertexSize,r=n.y-Math.sin(s)*this.vertexSize,h=Math.abs(i/Math.cos(e)),c=s+Math.PI+e,l=o+Math.cos(c)*h,a=r+Math.sin(c)*h,u=s+Math.PI-e,d=o+Math.cos(u)*h,p=r+Math.sin(u)*h;t.moveTo(d,p),t.lineTo(o,r),t.moveTo(l,a),t.lineTo(o,r),t.moveTo(o,r),t.lineWidth=5,t.stroke()}},t.prototype.endPosition=function(){if(null===this._end)return null;if(this._end instanceof s){var t=this.start.position.angle(this._end.position.x,this._end.position.y);return new o(this._end.position.x,this._end.position.y).offset(-this.vertexSize,t)}return this._end},t.prototype.endVertex=function(){return this._end instanceof s?this._end:null},t.prototype.setEnd=function(t){this._end=t},t}();!function(t){t[t.Default=0]="Default",t[t.Create=1]="Create"}(n||(n={})),window.onload=function(){var t,e,i,s=document.getElementById("d"),o=new h(s);null===(t=document.getElementById("clear"))||void 0===t||t.addEventListener("click",(function(t){return o.clear()})),null===(e=document.getElementById("default"))||void 0===e||e.addEventListener("click",(function(t){return o.setMode(n.Default)})),null===(i=document.getElementById("create"))||void 0===i||i.addEventListener("click",(function(t){return o.setMode(n.Create)}))};var h=function(){function t(t){var e=this;this.vertices=[],this.edges=[],this.connecting=null,this.selectedVertex=null,this.preventClick=!1,this.dragStartPosition=null,this.dragging=null,this.preventClickTime=0,this.clickDelay=125,this.mode=n.Create,this.directed=!0,this.context=t.getContext("2d"),this.canvas=t,t.addEventListener("click",(function(t){return e.handleClick(t)})),t.addEventListener("mousemove",(function(t){return e.handleHover(t)})),t.addEventListener("mousedown",(function(t){return e.startDrag(t)})),t.addEventListener("mouseup",(function(t){return e.endDrag(t)})),window.addEventListener("keydown",(function(t){"Escape"===t.key?(e.connecting=null,e.update()):"Delete"===t.key&&e.deleteSelectedVertex()}))}return t.prototype.update=function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(var t=0,e=this.vertices;t<e.length;t++){e[t].draw(this.context)}null!==this.connecting&&this.connecting.draw(this.context);for(var i=0,n=this.edges;i<n.length;i++){n[i].draw(this.context)}},t.prototype.startDrag=function(t){this.dragStartPosition=this.getMousePos(t),this.dragging=this.vertexAt(this.dragStartPosition),this.preventClickTime=Date.now()},t.prototype.endDrag=function(t){null!=this.dragging&&(this.preventClick=!0),this.dragging=null},t.prototype.isClickPrevented=function(t){var e=this.getMousePos(t);return 0==this.preventClickTime||(null==this.dragStartPosition||!this.dragStartPosition.compare(e))&&Date.now()-this.preventClickTime>this.clickDelay},t.prototype.handleClick=function(t){this.isClickPrevented(t)||(this.handleMode(this.getMousePos(t)),this.update())},t.prototype.handleMode=function(t){var e=this.vertexAt(t);this.mode!=n.Default?this.mode==n.Create&&this.createVertices(e,t):this.selectVertex(e)},t.prototype.createVertices=function(t,e){null!=t||null!=this.connecting?null!=t&&(null==this.connecting?this.connecting=new r(t,this.directed):(this.connecting.setEnd(t),this.edges.push(this.connecting),this.connecting=null)):this.vertices.push(new s(this,e))},t.prototype.selectVertex=function(t){null!=this.selectedVertex&&(this.selectedVertex.selected=!1),this.selectedVertex!=t&&null!=t?(t.selected=!0,this.selectedVertex=t):this.selectedVertex=null},t.prototype.deleteSelectedVertex=function(){if(null!=this.selectedVertex){for(var t=[],e=0,i=this.edges;e<i.length;e++){var n=i[e];n.start!=this.selectedVertex?null!=n.endVertex()&&n.endVertex()==this.selectedVertex&&t.push(n):t.push(n)}this.deleteEdges(t);var s=this.vertices.indexOf(this.selectedVertex,0);s>-1&&this.vertices.splice(s,1),this.update()}},t.prototype.deleteEdges=function(t){for(var e=0,i=t;e<i.length;e++){var n=i[e],s=this.edges.indexOf(n,0);s<=-1||this.edges.splice(s,1)}},t.prototype.elementExistsAt=function(t){for(var e=!1,i=0,n=this.vertices;i<n.length;i++){n[i].isWithin(t)&&(e=!0)}return e},t.prototype.vertexAt=function(t){for(var e=0,i=this.vertices;e<i.length;e++){var n=i[e];if(n.isWithin(t))return n}return null},t.prototype.handleHover=function(t){var e=!1,i=this.elementExistsAt(this.getMousePos(t));document.body.style.cursor=i?"pointer":"default",null!==this.connecting&&(this.connecting.setEnd(this.getMousePos(t)),e=!0),null!==this.dragging&&Date.now()-this.preventClickTime>this.clickDelay&&(this.dragging.position=this.getMousePos(t),e=!0),e&&this.update()},t.prototype.getMousePos=function(t){var e=this.canvas.getBoundingClientRect();return new o(t.clientX-e.left,t.clientY-e.top)},t.prototype.clear=function(){this.edges=[],this.vertices=[],this.update()},t.prototype.setMode=function(t){this.mode=t},t}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmFwaC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9HcmFwaC8uL3NyYy9WZXJ0ZXgudHMiLCJ3ZWJwYWNrOi8vR3JhcGgvLi9zcmMvR3JhcGhNb2RlLnRzIiwid2VicGFjazovL0dyYXBoLy4vc3JjL1Bvc2l0aW9uLnRzIiwid2VicGFjazovL0dyYXBoLy4vc3JjL0VkZ2UudHMiLCJ3ZWJwYWNrOi8vR3JhcGgvLi9zcmMvR3JhcGgudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJNb2RlIiwibm90aWZpZXIiLCJwb3NpdGlvbiIsInJhZGl1cyIsInNlbGVjdGVkIiwidGhpcyIsImRyYXciLCJjb250ZXh0IiwiYmVnaW5QYXRoIiwiYXJjIiwieCIsInkiLCJNYXRoIiwiUEkiLCJmaWxsU3R5bGUiLCJmaWxsIiwibGluZVdpZHRoIiwic3Ryb2tlU3R5bGUiLCJzdHJva2UiLCJpc1dpdGhpbiIsInBvdyIsImNvbXBhcmUiLCJvZmZzZXQiLCJkaXN0YW5jZSIsImFuZ2xlIiwiUG9zaXRpb24iLCJjb3MiLCJzaW4iLCJhdGFuMiIsInN0YXJ0IiwiZGlyZWN0ZWQiLCJ2ZXJ0ZXhTaXplIiwiX2VuZCIsImVuZFBvc2l0aW9uIiwiZW5kUG9zIiwiVmVydGV4Iiwic3RhcnRQb3MiLCJtb3ZlVG8iLCJsaW5lVG8iLCJkcmF3QXJyb3ciLCJsaW5lQW5nbGUiLCJ4MiIsInkyIiwiaCIsImFicyIsImFuZ2xlMSIsInRvcHgiLCJ0b3B5IiwiYW5nbGUyIiwiYm90eCIsImJvdHkiLCJlbmRWZXJ0ZXgiLCJzZXRFbmQiLCJlbmQiLCJ3aW5kb3ciLCJvbmxvYWQiLCJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYXBwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJjbGVhciIsInNldE1vZGUiLCJEZWZhdWx0IiwiQ3JlYXRlIiwidmVydGljZXMiLCJlZGdlcyIsImNvbm5lY3RpbmciLCJzZWxlY3RlZFZlcnRleCIsInByZXZlbnRDbGljayIsImRyYWdTdGFydFBvc2l0aW9uIiwiZHJhZ2dpbmciLCJwcmV2ZW50Q2xpY2tUaW1lIiwiY2xpY2tEZWxheSIsImdldENvbnRleHQiLCJoYW5kbGVDbGljayIsImhhbmRsZUhvdmVyIiwic3RhcnREcmFnIiwiZW5kRHJhZyIsInVwZGF0ZSIsImRlbGV0ZVNlbGVjdGVkVmVydGV4IiwiY2xlYXJSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJnZXRNb3VzZVBvcyIsInZlcnRleEF0IiwiRGF0ZSIsIm5vdyIsImlzQ2xpY2tQcmV2ZW50ZWQiLCJtb3VzZVBvcyIsImhhbmRsZU1vZGUiLCJjbGlja2VkVmVydGV4IiwiY3JlYXRlVmVydGljZXMiLCJzZWxlY3RWZXJ0ZXgiLCJ2ZXJ0ZXgiLCJwdXNoIiwiZGVsZXRlRWRnZXMiLCJlZGdlIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZWxlbWVudEV4aXN0c0F0Iiwic2hvdWxkQ2hhbmdlIiwicmVEcmF3IiwiYm9keSIsInN0eWxlIiwiY3Vyc29yIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFgiLCJsZWZ0IiwiY2xpZW50WSIsInRvcCJdLCJtYXBwaW5ncyI6InNCQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIs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R0FBUyxHQUdUQSxHQUNBbkcsS0FBSzJFLFVBR0wsWUFBQUssWUFBUixTQUFvQnhCLEdBQ2hCLElBQUkrQyxFQUFPdkcsS0FBS21ELE9BQU9xRCx3QkFDdkIsT0FBTyxJQUFJcEYsRUFBU29DLEVBQUVpRCxRQUFVRixFQUFLRyxLQUFNbEQsRUFBRW1ELFFBQVVKLEVBQUtLLE1BR3pELFlBQUFuRCxNQUFQLFdBQ0l6RCxLQUFLOEQsTUFBUSxHQUNiOUQsS0FBSzZELFNBQVcsR0FDaEI3RCxLQUFLMkUsVUFHRixZQUFBakIsUUFBUCxTQUFlNUUsR0FDWGtCLEtBQUtsQixLQUFPQSxHQUdwQixFQTdNQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJpbXBvcnQgeyBQb3NpdGlvbiB9IGZyb20gXCIuL1Bvc2l0aW9uXCJcbmltcG9ydCB7IFNob3VsZFVwZGF0ZSB9IGZyb20gXCIuL1Nob3VsZFVwZGF0ZVwiO1xuXG5leHBvcnQgY2xhc3MgVmVydGV4IHtcblxuICAgIHJhZGl1czogbnVtYmVyID0gMzA7XG4gICAgbm90aWZpZXI6IFNob3VsZFVwZGF0ZTtcbiAgICBwb3NpdGlvbjogUG9zaXRpb247XG4gICAgc2VsZWN0ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKG5vdGlmaWVyOiBTaG91bGRVcGRhdGUsIHBvc2l0aW9uOiBQb3NpdGlvbikge1xuICAgICAgICB0aGlzLm5vdGlmaWVyID0gbm90aWZpZXI7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICB9XG5cbiAgICBkcmF3KGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCk6IHZvaWQge1xuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmFyYyh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5yYWRpdXMsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XG4gICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gdGhpcy5zZWxlY3RlZCA/ICcjRDRGRkRBJyA6ICcjZmZmJztcbiAgICAgICAgY29udGV4dC5maWxsKCk7XG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gNTtcbiAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IFwiIzAwMFwiO1xuICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpc1dpdGhpbihwb3NpdGlvbjogUG9zaXRpb24pOiBib29sZWFuIHtcblxuICAgICAgICByZXR1cm4gTWF0aC5wb3cocG9zaXRpb24ueCAtIHRoaXMucG9zaXRpb24ueCwgMikgKyBNYXRoLnBvdyhwb3NpdGlvbi55IC0gdGhpcy5wb3NpdGlvbi55LCAyKSA8IE1hdGgucG93KHRoaXMucmFkaXVzLCAyKTtcbiAgICB9XG59IiwiZXhwb3J0IGVudW0gTW9kZSB7XG4gICAgRGVmYXVsdCxcbiAgICBDcmVhdGVcbn0iLCJleHBvcnQgY2xhc3MgUG9zaXRpb24ge1xuICAgIHg6IG51bWJlcjtcbiAgICB5OiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgIH1cblxuICAgIHB1YmxpYyBjb21wYXJlKHBvc2l0aW9uOiBQb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gdGhpcy54ID09IHBvc2l0aW9uLnggJiYgdGhpcy55ID09IHBvc2l0aW9uLnk7XG4gICAgfVxuXG4gICAgcHVibGljIG9mZnNldChkaXN0YW5jZTogbnVtYmVyLCBhbmdsZTogbnVtYmVyKTogUG9zaXRpb24ge1xuICAgICAgICBsZXQgeCA9IHRoaXMueCArIE1hdGguY29zKGFuZ2xlKSAqIGRpc3RhbmNlO1xuICAgICAgICBsZXQgeSA9IHRoaXMueSArIE1hdGguc2luKGFuZ2xlKSAqIGRpc3RhbmNlO1xuICAgICAgICByZXR1cm4gbmV3IFBvc2l0aW9uKHgsIHkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhbmdsZSh4OiBudW1iZXIsIHk6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLmF0YW4yKHkgLSB0aGlzLnksIHggLSB0aGlzLngpO1xuICAgIH1cblxufVxuIiwiaW1wb3J0IHsgVmVydGV4IH0gZnJvbSBcIi4vVmVydGV4XCI7XG5pbXBvcnQgeyBQb3NpdGlvbiB9IGZyb20gXCIuL1Bvc2l0aW9uXCI7XG5cbmV4cG9ydCBjbGFzcyBFZGdlIHtcbiAgICBzdGFydDogVmVydGV4O1xuICAgIGRpcmVjdGVkOiBib29sZWFuID0gdHJ1ZTtcbiAgICB2ZXJ0ZXhTaXplOiBudW1iZXIgPSAzMDtcbiAgICBwcml2YXRlIF9lbmQ6IFZlcnRleCB8IFBvc2l0aW9uIHwgbnVsbCA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcihzdGFydDogVmVydGV4LCBkaXJlY3RlZDogYm9vbGVhbiA9IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuc3RhcnQgPSBzdGFydDtcbiAgICAgICAgdGhpcy5kaXJlY3RlZCA9IGRpcmVjdGVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5lbmRQb3NpdGlvbigpID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBsZXQgZW5kUG9zID0gdGhpcy5lbmRQb3NpdGlvbigpO1xuICAgICAgICBpZiAoZW5kUG9zID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGxldCBhbmdsZSA9IE1hdGguYXRhbjIoZW5kUG9zLnkgLSB0aGlzLnN0YXJ0LnBvc2l0aW9uLnksIGVuZFBvcy54IC0gdGhpcy5zdGFydC5wb3NpdGlvbi54KTtcblxuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gdGhpcy5fZW5kIGluc3RhbmNlb2YgVmVydGV4ID8gXCIjMDAwXCIgOiAnI0Y1NkU2RSc7XG4gICAgICAgIGxldCBzdGFydFBvcyA9IHRoaXMuc3RhcnQucG9zaXRpb24ub2Zmc2V0KHRoaXMudmVydGV4U2l6ZSwgYW5nbGUpO1xuICAgICAgICBjb250ZXh0Lm1vdmVUbyhzdGFydFBvcy54LCBzdGFydFBvcy55KTtcbiAgICAgICAgY29udGV4dC5saW5lVG8oZW5kUG9zLngsIGVuZFBvcy55KTtcblxuICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xuXG4gICAgICAgIGlmICh0aGlzLmRpcmVjdGVkKVxuICAgICAgICAgICAgdGhpcy5kcmF3QXJyb3coY29udGV4dCwgLjUsIDIwKVxuICAgIH1cblxuICAgIHByaXZhdGUgZHJhd0Fycm93KGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCwgYW5nbGU6IG51bWJlciwgZGlzdGFuY2U6IG51bWJlcikge1xuICAgICAgICBsZXQgZW5kUG9zaXRpb24gPSB0aGlzLmVuZFBvc2l0aW9uKCk7XG4gICAgICAgIGlmIChlbmRQb3NpdGlvbiA9PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAvKmlmICh0aGlzLl9lbmQgPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjsqL1xuXG4gICAgICAgIHZhciBsaW5lQW5nbGUgPSBNYXRoLmF0YW4yKGVuZFBvc2l0aW9uLnkgLSB0aGlzLnN0YXJ0LnBvc2l0aW9uLnksIGVuZFBvc2l0aW9uLnggLSB0aGlzLnN0YXJ0LnBvc2l0aW9uLngpO1xuICAgICAgICBlbmRQb3NpdGlvbiA9IGVuZFBvc2l0aW9uLm9mZnNldCh0aGlzLnZlcnRleFNpemUsIGxpbmVBbmdsZSk7XG4gICAgICAgIGxldCB4MiA9IGVuZFBvc2l0aW9uLnggLSBNYXRoLmNvcyhsaW5lQW5nbGUpICogdGhpcy52ZXJ0ZXhTaXplO1xuICAgICAgICBsZXQgeTIgPSBlbmRQb3NpdGlvbi55IC0gTWF0aC5zaW4obGluZUFuZ2xlKSAqIHRoaXMudmVydGV4U2l6ZTtcblxuICAgICAgICB2YXIgaCA9IE1hdGguYWJzKGRpc3RhbmNlIC8gTWF0aC5jb3MoYW5nbGUpKTtcblxuICAgICAgICB2YXIgYW5nbGUxID0gbGluZUFuZ2xlICsgTWF0aC5QSSArIGFuZ2xlO1xuICAgICAgICB2YXIgdG9weCA9IHgyICsgTWF0aC5jb3MoYW5nbGUxKSAqIGg7XG4gICAgICAgIHZhciB0b3B5ID0geTIgKyBNYXRoLnNpbihhbmdsZTEpICogaDtcbiAgICAgICAgdmFyIGFuZ2xlMiA9IGxpbmVBbmdsZSArIE1hdGguUEkgLSBhbmdsZTtcbiAgICAgICAgdmFyIGJvdHggPSB4MiArIE1hdGguY29zKGFuZ2xlMikgKiBoO1xuICAgICAgICB2YXIgYm90eSA9IHkyICsgTWF0aC5zaW4oYW5nbGUyKSAqIGg7XG5cbiAgICAgICAgY29udGV4dC5tb3ZlVG8oYm90eCwgYm90eSk7XG4gICAgICAgIGNvbnRleHQubGluZVRvKHgyLCB5MilcbiAgICAgICAgY29udGV4dC5tb3ZlVG8odG9weCwgdG9weSk7XG4gICAgICAgIGNvbnRleHQubGluZVRvKHgyLCB5Mik7XG4gICAgICAgIGNvbnRleHQubW92ZVRvKHgyLCB5Mik7XG4gICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gNTtcbiAgICAgICAgY29udGV4dC5zdHJva2UoKTtcblxuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBlbmRQb3NpdGlvbigpOiBQb3NpdGlvbiB8IG51bGwge1xuICAgICAgICBpZiAodGhpcy5fZW5kID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmICh0aGlzLl9lbmQgaW5zdGFuY2VvZiBWZXJ0ZXgpIHtcbiAgICAgICAgICAgIGxldCBhbmdsZSA9IHRoaXMuc3RhcnQucG9zaXRpb24uYW5nbGUodGhpcy5fZW5kLnBvc2l0aW9uLngsIHRoaXMuX2VuZC5wb3NpdGlvbi55KTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUG9zaXRpb24odGhpcy5fZW5kLnBvc2l0aW9uLngsIHRoaXMuX2VuZC5wb3NpdGlvbi55KS5vZmZzZXQoLXRoaXMudmVydGV4U2l6ZSwgYW5nbGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9lbmQ7XG4gICAgfVxuXG4gICAgcHVibGljIGVuZFZlcnRleCgpOiBWZXJ0ZXggfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VuZCBpbnN0YW5jZW9mIFZlcnRleCA/IHRoaXMuX2VuZCA6IG51bGw7XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgc2V0RW5kKGVuZDogUG9zaXRpb24gfCBWZXJ0ZXgpIHtcbiAgICAgICAgdGhpcy5fZW5kID0gZW5kO1xuICAgIH1cblxuXG59XG4iLCJpbXBvcnQgeyBTaG91bGRVcGRhdGUgfSBmcm9tIFwiLi9TaG91bGRVcGRhdGVcIjtcbmltcG9ydCB7IFZlcnRleCB9IGZyb20gXCIuL1ZlcnRleFwiO1xuaW1wb3J0IHsgRWRnZSB9IGZyb20gXCIuL0VkZ2VcIjtcbmltcG9ydCB7IFBvc2l0aW9uIH0gZnJvbSBcIi4vUG9zaXRpb25cIjtcbmltcG9ydCB7IE1vZGUgfSBmcm9tIFwiLi9HcmFwaE1vZGVcIjtcblxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgICB2YXIgY2FudmFzID0gPEhUTUxDYW52YXNFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZFwiKTtcbiAgICB2YXIgYXBwID0gbmV3IEdyYXBoKGNhbnZhcyk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjbGVhclwiKT8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiBhcHAuY2xlYXIoKSk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZWZhdWx0XCIpPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IGFwcC5zZXRNb2RlKE1vZGUuRGVmYXVsdCkpO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3JlYXRlXCIpPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IGFwcC5zZXRNb2RlKE1vZGUuQ3JlYXRlKSk7XG59XG5cbmV4cG9ydCBjbGFzcyBHcmFwaCBpbXBsZW1lbnRzIFNob3VsZFVwZGF0ZSB7XG5cbiAgICBjb250ZXh0OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XG4gICAgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICB2ZXJ0aWNlczogQXJyYXk8VmVydGV4PiA9IFtdXG4gICAgZWRnZXM6IEFycmF5PEVkZ2U+ID0gW107XG4gICAgY29ubmVjdGluZzogRWRnZSB8IG51bGwgPSBudWxsO1xuICAgIHNlbGVjdGVkVmVydGV4OiBWZXJ0ZXggfCBudWxsID0gbnVsbDtcblxuICAgIHByZXZlbnRDbGljazogYm9vbGVhbiA9IGZhbHNlO1xuICAgIGRyYWdTdGFydFBvc2l0aW9uOiBQb3NpdGlvbiB8IG51bGwgPSBudWxsO1xuICAgIGRyYWdnaW5nOiBWZXJ0ZXggfCBudWxsID0gbnVsbDtcblxuICAgIHByZXZlbnRDbGlja1RpbWU6IG51bWJlciA9IDA7XG4gICAgY2xpY2tEZWxheTogbnVtYmVyID0gMTI1O1xuICAgIG1vZGU6IE1vZGUgPSBNb2RlLkNyZWF0ZTtcbiAgICBkaXJlY3RlZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IDxDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ+Y2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHRoaXMuaGFuZGxlQ2xpY2soZSkpXG4gICAgICAgIGNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIChlKSA9PiB0aGlzLmhhbmRsZUhvdmVyKGUpKTtcbiAgICAgICAgY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGUpID0+IHRoaXMuc3RhcnREcmFnKGUpKVxuICAgICAgICBjYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgKGUpID0+IHRoaXMuZW5kRHJhZyhlKSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0aW5nID0gbnVsbDtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlLmtleSA9PT0gXCJEZWxldGVcIikge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlU2VsZWN0ZWRWZXJ0ZXgoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB1cGRhdGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodCk7XG5cbiAgICAgICAgZm9yIChsZXQgaXRlbSBvZiB0aGlzLnZlcnRpY2VzKSB7XG4gICAgICAgICAgICBpdGVtLmRyYXcodGhpcy5jb250ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jb25uZWN0aW5nICE9PSBudWxsKVxuICAgICAgICAgICAgdGhpcy5jb25uZWN0aW5nLmRyYXcodGhpcy5jb250ZXh0KTtcbiAgICAgICAgZm9yIChsZXQgZWRnZSBvZiB0aGlzLmVkZ2VzKSB7XG4gICAgICAgICAgICBlZGdlLmRyYXcodGhpcy5jb250ZXh0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXJ0RHJhZyhlOiBNb3VzZUV2ZW50KSB7XG4gICAgICAgIHRoaXMuZHJhZ1N0YXJ0UG9zaXRpb24gPSB0aGlzLmdldE1vdXNlUG9zKGUpO1xuICAgICAgICB0aGlzLmRyYWdnaW5nID0gdGhpcy52ZXJ0ZXhBdCh0aGlzLmRyYWdTdGFydFBvc2l0aW9uKTtcbiAgICAgICAgdGhpcy5wcmV2ZW50Q2xpY2tUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB9XG5cbiAgICBlbmREcmFnKGU6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuZHJhZ2dpbmcgIT0gbnVsbClcbiAgICAgICAgICAgIHRoaXMucHJldmVudENsaWNrID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLmRyYWdnaW5nID0gbnVsbDtcbiAgICB9XG5cbiAgICBwcml2YXRlIGlzQ2xpY2tQcmV2ZW50ZWQoZTogTW91c2VFdmVudCk6IGJvb2xlYW4ge1xuICAgICAgICBsZXQgbW91c2VQb3MgPSB0aGlzLmdldE1vdXNlUG9zKGUpO1xuICAgICAgICBpZiAodGhpcy5wcmV2ZW50Q2xpY2tUaW1lID09IDApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKHRoaXMuZHJhZ1N0YXJ0UG9zaXRpb24gIT0gbnVsbCAmJiB0aGlzLmRyYWdTdGFydFBvc2l0aW9uLmNvbXBhcmUobW91c2VQb3MpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgIHJldHVybiBEYXRlLm5vdygpIC0gdGhpcy5wcmV2ZW50Q2xpY2tUaW1lID4gdGhpcy5jbGlja0RlbGF5O1xuICAgIH1cblxuICAgIGhhbmRsZUNsaWNrKGU6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDbGlja1ByZXZlbnRlZChlKSlcbiAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICB0aGlzLmhhbmRsZU1vZGUodGhpcy5nZXRNb3VzZVBvcyhlKSk7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoYW5kbGVNb2RlKHBvc2l0aW9uOiBQb3NpdGlvbik6IHZvaWQge1xuICAgICAgICBsZXQgY2xpY2tlZFZlcnRleCA9IHRoaXMudmVydGV4QXQocG9zaXRpb24pO1xuXG5cbiAgICAgICAgaWYgKHRoaXMubW9kZSA9PSBNb2RlLkRlZmF1bHQpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0VmVydGV4KGNsaWNrZWRWZXJ0ZXgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMubW9kZSA9PSBNb2RlLkNyZWF0ZSkge1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVWZXJ0aWNlcyhjbGlja2VkVmVydGV4LCBwb3NpdGlvbik7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHByaXZhdGUgY3JlYXRlVmVydGljZXModmVydGV4OiBWZXJ0ZXggfCBudWxsLCBwb3NpdGlvbjogUG9zaXRpb24pOiB2b2lkIHtcbiAgICAgICAgaWYgKHZlcnRleCA9PSBudWxsICYmIHRoaXMuY29ubmVjdGluZyA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnZlcnRpY2VzLnB1c2gobmV3IFZlcnRleCh0aGlzLCBwb3NpdGlvbikpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2ZXJ0ZXggPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgaWYgKHRoaXMuY29ubmVjdGluZyA9PSBudWxsKVxuICAgICAgICAgICAgdGhpcy5jb25uZWN0aW5nID0gbmV3IEVkZ2UodmVydGV4LCB0aGlzLmRpcmVjdGVkKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNvbm5lY3Rpbmcuc2V0RW5kKHZlcnRleCk7XG4gICAgICAgICAgICB0aGlzLmVkZ2VzLnB1c2godGhpcy5jb25uZWN0aW5nKTtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGluZyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHNlbGVjdFZlcnRleCh2ZXJ0ZXg6IFZlcnRleCB8IG51bGwpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRWZXJ0ZXggIT0gbnVsbClcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRWZXJ0ZXguc2VsZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRWZXJ0ZXggPT0gdmVydGV4IHx8IHZlcnRleCA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkVmVydGV4ID0gbnVsbDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZlcnRleC5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRWZXJ0ZXggPSB2ZXJ0ZXg7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkZWxldGVTZWxlY3RlZFZlcnRleCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRWZXJ0ZXggPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGRlbGV0ZUVkZ2VzID0gW107XG4gICAgICAgIGZvciAobGV0IGVkZ2Ugb2YgdGhpcy5lZGdlcykge1xuICAgICAgICAgICAgaWYgKGVkZ2Uuc3RhcnQgPT0gdGhpcy5zZWxlY3RlZFZlcnRleCkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZUVkZ2VzLnB1c2goZWRnZSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZWRnZS5lbmRWZXJ0ZXgoKSAhPSBudWxsICYmIGVkZ2UuZW5kVmVydGV4KCkgPT0gdGhpcy5zZWxlY3RlZFZlcnRleClcbiAgICAgICAgICAgICAgICBkZWxldGVFZGdlcy5wdXNoKGVkZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZGVsZXRlRWRnZXMoZGVsZXRlRWRnZXMpO1xuICAgICAgICBcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy52ZXJ0aWNlcy5pbmRleE9mKHRoaXMuc2VsZWN0ZWRWZXJ0ZXgsIDApO1xuICAgICAgICBpZiAoaW5kZXggPiAtMSlcbiAgICAgICAgICAgIHRoaXMudmVydGljZXMuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZGVsZXRlRWRnZXMoZWRnZXM6IEFycmF5PEVkZ2U+KTogdm9pZCB7XG4gICAgICAgIGZvciAobGV0IGVkZ2Ugb2YgZWRnZXMpIHtcbiAgICAgICAgICAgIGxldCBpbmRleCA9IHRoaXMuZWRnZXMuaW5kZXhPZihlZGdlLCAwKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA8PSAtMSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIHRoaXMuZWRnZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZWxlbWVudEV4aXN0c0F0KHBvc2l0aW9uOiBQb3NpdGlvbik6IGJvb2xlYW4ge1xuICAgICAgICBsZXQgc2hvdWxkQ2hhbmdlOiBib29sZWFuID0gZmFsc2U7XG4gICAgICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy52ZXJ0aWNlcykge1xuICAgICAgICAgICAgaWYgKGl0ZW0uaXNXaXRoaW4ocG9zaXRpb24pKVxuICAgICAgICAgICAgICAgIHNob3VsZENoYW5nZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNob3VsZENoYW5nZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHZlcnRleEF0KHBvc2l0aW9uOiBQb3NpdGlvbik6IFZlcnRleCB8IG51bGwge1xuICAgICAgICBmb3IgKGxldCB2ZXJ0ZXggb2YgdGhpcy52ZXJ0aWNlcykge1xuICAgICAgICAgICAgaWYgKHZlcnRleC5pc1dpdGhpbihwb3NpdGlvbikpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZlcnRleDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cblxuICAgIGhhbmRsZUhvdmVyKGU6IE1vdXNlRXZlbnQpOiB2b2lkIHtcblxuICAgICAgICBsZXQgcmVEcmF3OiBib29sZWFuID0gZmFsc2U7XG4gICAgICAgIGxldCBzaG91bGRDaGFuZ2UgPSB0aGlzLmVsZW1lbnRFeGlzdHNBdCh0aGlzLmdldE1vdXNlUG9zKGUpKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSBzaG91bGRDaGFuZ2UgPyBcInBvaW50ZXJcIiA6IFwiZGVmYXVsdFwiO1xuXG4gICAgICAgIGlmICh0aGlzLmNvbm5lY3RpbmcgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGluZy5zZXRFbmQodGhpcy5nZXRNb3VzZVBvcyhlKSk7XG4gICAgICAgICAgICByZURyYXcgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZHJhZ2dpbmcgIT09IG51bGwgJiYgRGF0ZS5ub3coKSAtIHRoaXMucHJldmVudENsaWNrVGltZSA+IHRoaXMuY2xpY2tEZWxheSkge1xuICAgICAgICAgICAgdGhpcy5kcmFnZ2luZy5wb3NpdGlvbiA9IHRoaXMuZ2V0TW91c2VQb3MoZSk7XG4gICAgICAgICAgICByZURyYXcgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHJlRHJhdylcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRNb3VzZVBvcyhlOiBNb3VzZUV2ZW50KTogUG9zaXRpb24ge1xuICAgICAgICB2YXIgcmVjdCA9IHRoaXMuY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICByZXR1cm4gbmV3IFBvc2l0aW9uKGUuY2xpZW50WCAtIHJlY3QubGVmdCwgZS5jbGllbnRZIC0gcmVjdC50b3ApO1xuICAgIH1cblxuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5lZGdlcyA9IFtdO1xuICAgICAgICB0aGlzLnZlcnRpY2VzID0gW107XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldE1vZGUobW9kZTogTW9kZSkge1xuICAgICAgICB0aGlzLm1vZGUgPSBtb2RlO1xuICAgIH1cblxufSJdLCJzb3VyY2VSb290IjoiIn0=